import java.util.concurrent.locks.*;

public class SegTournant implements Runnable{

    private int          position;
    private int          destination;
    private boolean      appele;
    private boolean      deplacement;
    public  boolean      entree;
    private boolean      positionOK;
    private Loco         id;
    private ReentranLock lock               = new ReentrantLock();
    private Condition    attendreAppel      = lock.newCondition();
    private Condition    attendreEntree     = lock.newCondition();
    private Condition    attendreLoco       = lock.newCondition();
    private Condition    attendrePositionOK = lock.newCondition();
    private Condition    attendreSorti      = lock.newCondition();
    
    public SegTournant(){
	appele     = false;
	delacement = true;
	positionOK = true;
	entree     = false;
	sorti      = false;
	position   = 0;
    }

    public void attendreAppel()throws InterruptedException{
	lock.lock();
	while(!appele)
	    attendreAppel.await();
	lock.unlock();
    }

    public void appeler(int id)throws InterruptedException{
	lock.lock();
	while(appele)
	    attendreLoco.await();
	try{
	    Thread.sleep(200);
	}catch(InterruptedException e){
	}
	appele      = true;
	positionOK  = false;
	destination = id;
	attendreAppel.signalAll();
	lock.unlock();
    }

    public void seDeplacer(){
	lock.lock();
	while(entrer)
	    attendreEntree.await();
	position = destination;
	positionOK = true;
	attendrePositionOK.signalAll();
	lock.unlock();
    }

    public void attendrePositionOK(){
	lock.lock();
	while(!positionOK)
	    attendrePositionOK.await();
	deplacement = false;
	lock.unlock();
    }

    public void entrer(Loco id){
	lock.lock();
	while(!entree)
	    attendreLoco.await();
	entree = true;
	attendreEntree.signalAll();
	lock.unlock();
    }

    public void attendreEntree(){
	lock.lock();
	while(!entree)
	    attendreEntree.await();
	attendreLoco.signalAll();
    }

    public void sortir(){
	lock.lock();
	while(deplacement)
	    attendrePositionOK.await();
	entree = false;
	appele = false;
	sorti  = true;
	attendreLoco.signalAll();
	lock.unlock();
    }

    public void attendreVide(){
	lock.lock();
	while(!sorti)
	    attendreSorti.await();
	sorti = false;
	lock.unlock();
    }
	
    public void run() {
	try	{
	    while(true) {
		attendreAppel();
		seDeplacer();
		attendreEntree();
		seDeplacer();
		attendreVide();
	    }
	}catch(InterruptedException e) {
	    System.out.println("Terminaison sur interruption du segment tournant");
	}
    }
}
